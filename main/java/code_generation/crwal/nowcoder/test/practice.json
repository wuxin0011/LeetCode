{
  "code": 0,
  "message": "请求成功",
  "data": {
    "id": "23286",
    "uuid": null,
    "isMulti": null,
    "parentId": null,
    "title": null,
    "content": null,
    "type": 11,
    "difficulty": 2,
    "defaultScore": null,
    "remark": null,
    "analysis": null,
    "skills": null,
    "tags": null,
    "openLibrary": null,
    "codingInfo": {
      "timeLimit": 1,
      "memoryLimit": 256,
      "inputDesc": null,
      "outputDesc": null,
      "codingHint": null,
      "dataFile": null,
      "caseCount": null,
      "checkerFileName": null,
      "floatAccuracyDigit": 0,
      "setting": {
        "deleteBlankLine": true,
        "autoDeleteSpace": true,
        "advanceCode": false,
        "enablePreCode": null
      },
      "noSamples": false,
      "mainJson": null,
      "frontEnvironments": null,
      "samples": [
        {
          "index": "1",
          "input": "{1,2,3}",
          "output": "{3,2,1}",
          "note": ""
        },
        {
          "index": "2",
          "input": "{}",
          "output": "{}",
          "note": "空链表则输出空                 "
        }
      ],
      "apiJudgeUrl": null,
      "supportLanguages": [
        {
          "langId": 4,
          "langName": "Java",
          "template": "import java.util.*;\n\n/*\n * public class ListNode {\n *   int val;\n *   ListNode next = null;\n *   public ListNode(int val) {\n *     this.val = val;\n *   }\n * }\n */\n\npublic class Solution {\n    /**\n     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可\n     *\n     * \n     * @param head ListNode类 \n     * @return ListNode类\n     */\n    public ListNode ReverseList (ListNode head) {\n        // write code here\n    }\n}"
        },
        {
          "langId": 2,
          "langName": "C++",
          "template": "/**\n * struct ListNode {\n *\tint val;\n *\tstruct ListNode *next;\n *\tListNode(int x) : val(x), next(nullptr) {}\n * };\n */\nclass Solution {\npublic:\n    /**\n     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可\n     *\n     * \n     * @param head ListNode类 \n     * @return ListNode类\n     */\n    ListNode* ReverseList(ListNode* head) {\n        // write code here\n    }\n};"
        },
        {
          "langId": 5,
          "langName": "Python",
          "template": "#coding:utf-8\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n#\n# 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可\n#\n# \n# @param head ListNode类 \n# @return ListNode类\n#\nclass Solution:\n    def ReverseList(self , head ):\n        # write code here"
        },
        {
          "langId": 11,
          "langName": "Python 3",
          "template": "# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n#\n# 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可\n#\n# \n# @param head ListNode类 \n# @return ListNode类\n#\nclass Solution:\n    def ReverseList(self , head: ListNode) -> ListNode:\n        # write code here"
        },
        {
          "langId": 9,
          "langName": "C#",
          "template": "using System;\nusing System.Collections.Generic;\n\n/*\npublic class ListNode\n{\n\tpublic int val;\n\tpublic ListNode next;\n\n\tpublic ListNode (int x)\n\t{\n\t\tval = x;\n\t}\n}\n*/\n\nclass Solution {\n    /**\n     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可\n     *\n     * \n     * @param head ListNode类 \n     * @return ListNode类\n     */\n    public ListNode ReverseList (ListNode head) {\n        // write code here\n    }\n}"
        },
        {
          "langId": 1,
          "langName": "C",
          "template": "/**\n * struct ListNode {\n *\tint val;\n *\tstruct ListNode *next;\n * };\n */\n/**\n * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可\n *\n * \n * @param head ListNode类 \n * @return ListNode类\n */\nstruct ListNode* ReverseList(struct ListNode* head ) {\n    // write code here\n}"
        },
        {
          "langId": 13,
          "langName": "Javascript",
          "template": "/*\n * function ListNode(x){\n *   this.val = x;\n *   this.next = null;\n * }\n */\n/**\n * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可\n *\n * \n * @param head ListNode类 \n * @return ListNode类\n */\nfunction ReverseList( head ) {\n    // write code here\n}\nmodule.exports = {\n    ReverseList : ReverseList\n};"
        },
        {
          "langId": 8,
          "langName": "Php",
          "template": "<?php\n\n/*class ListNode{\n    var $val;\n    var $next = NULL;\n    function __construct($x){\n        $this->val = $x;\n    }\n}*/\n\n/**\n * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可\n *\n * \n * @param head ListNode类 \n * @return ListNode类\n */\nfunction ReverseList( $head )\n{\n    // write code here\n}"
        },
        {
          "langId": 17,
          "langName": "Go",
          "template": "package main\nimport \"fmt\"\nimport . \"nc_tools\"\n/*\n * type ListNode struct{\n *   Val int\n *   Next *ListNode\n * }\n */\n\n/**\n * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可\n *\n * \n * @param head ListNode类 \n * @return ListNode类\n*/\nfunc ReverseList( head *ListNode ) *ListNode {\n    // write code here\n}"
        },
        {
          "langId": 27,
          "langName": "Rust",
          "template": "/**\n *  #[derive(PartialEq, Eq, Debug, Clone)]\n *  pub struct ListNode {\n *      pub val: i32,\n *      pub next: Option<Box<ListNode>>\n *  }\n * \n *  impl ListNode {\n *      #[inline]\n *      fn new(val: i32) -> Self {\n *          ListNode {\n *              val: val,\n *              next: None,\n *          }\n *      }\n *  }\n */\nstruct Solution{\n\n}\n\nimpl Solution {\n    fn new() -> Self {\n        Solution{}\n    }\n\n    /**\n    * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可\n    *\n    * \n        * @param head ListNode类 \n        * @return ListNode类\n    */\n    pub fn ReverseList(&self, head: Option<Box<ListNode>>) -> Option<Box<ListNode>> {\n        // write code here\n    }\n}"
        },
        {
          "langId": 20,
          "langName": "Swift",
          "template": "/**\n * public class ListNode {\n *   public var val: Int\n *   public var next: ListNode?\n *   public init(_ val: Int = 0, _ next: ListNode? = nil) {\n *     self.val = val\n *     self.next = next\n *   }\n * }\n */\npublic class Solution {\n    /**\n     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可\n     *\n     * \n     * @param head ListNode类 \n     * @return ListNode类\n     */\n    func ReverseList ( _ head: ListNode?) -> ListNode? {\n// write code here\n    }\n}"
        },
        {
          "langId": 31,
          "langName": "Typescript",
          "template": "/*class ListNode {\n *     val: number\n *     next: ListNode | null\n *     constructor(val?: number, next?: ListNode | null) {\n *         this.val = (val===undefined ? 0 : val)\n *         this.next = (next===undefined ? null : next)\n *     }\n * }\n */\n/**\n * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可\n *\n * \n * @param head ListNode类 \n * @return ListNode类\n */\nexport function ReverseList(head: ListNode): ListNode {\n    // write code here\n}\n"
        },
        {
          "langId": 30,
          "langName": "Groovy",
          "template": "import java.util.*;\n\n/*\n * public class ListNode {\n *   int val;\n *   ListNode next = null;\n *   public ListNode(int val) {\n *     this.val = val;\n *   }\n * }\n */\n\npublic class Solution {\n    /**\n     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可\n     *\n     * \n     * @param head ListNode类 \n     * @return ListNode类\n     */\n    public ListNode ReverseList (ListNode head) {\n        // write code here\n    }\n}"
        },
        {
          "langId": 29,
          "langName": "Kotlin",
          "template": "/**\n * class ListNode(var `val`: Int) {\n *     var next: ListNode? = null\n * }\n */\nobject Solution {\n    /**\n    * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可\n    *\n    * \n        * @param head ListNode类 \n        * @return ListNode类\n    */\n    fun ReverseList(head: ListNode?): ListNode?  {\n        // write code here\n    }\n}\n\n\n"
        },
        {
          "langId": 28,
          "langName": "Scala",
          "template": "/**\n * class ListNode(var val: Int) {\n *   var next: ListNode = null\n * }\n */\nobject Solution {\n    /**\n    * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可\n    *\n    * \n        * @param head ListNode类 \n        * @return ListNode类\n    */\n    def ReverseList(head: ListNode): ListNode = {\n        // write code here\n    }\n}\n\n\n"
        },
        {
          "langId": 19,
          "langName": "Ruby",
          "template": "# class ListNode\n#   attr_accessor :val, :next\n# \n#   def initialize(val = 0, _next = nil)\n#     @val, @next = val, _next\n#   end\n# end\n# \n\n#\n# 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可\n#\n# \n# @param head ListNode类 \n# @return ListNode类\n#\nclass Solution\n    def ReverseList(head)\n        # write code here\n    end\nend"
        }
      ],
      "standardSubmissions": null,
      "generalExtraInfos": null,
      "isFeMultiTab": false
    },
    "statistics": null,
    "childQuestions": null,
    "answers": null,
    "openSetting": null,
    "blankFillSetting": null,
    "designSetting": null,
    "drawingTemplate": null,
    "favorite": false,
    "selfQuestionType": 0,
    "defaultSimilar": 80,
    "status": 2,
    "aiJudgeSetting": null
  }
}